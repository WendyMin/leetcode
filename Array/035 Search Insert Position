Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0





/*
  6ms 17%
  此题差距不大
 */
class Solution {
    public int searchInsert(int[] nums, int target) {
        int res=0;
        if(nums==null || nums.length==0) return res;
        else if(nums[0]>target) return 0;
        else if(nums[nums.length-1]<target) return nums.length;
        else{
            for(int i=0; i<nums.length; i++){
                if(nums[i]==target || nums[i]>target) return i;
            }
        }
        return res;
    }
}







/*
  5ms 61%
  二分法 数多的情况下时间更少
*/
class Solution {
    public int searchInsert(int[] nums, int target) {
        int l = 0, r = nums.length;
        int m = 0;
        if(nums[nums.length-1]<target) return nums.length;
        if(nums[0]>target) return 0;
        while(l<=r){
            m = (l+r)/2;
            if(nums[m]==target) return m;
            else if(nums[m]<target) l = m+1;
            else r = m-1;
        }
        return l;
    }
}
